# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
# https://aka.ms/yaml

# name of build pipeline VotingCI
trigger:
  - master

variables:
  solutionName: Voting
  solution: "**/*.sln"
  sfproj: "**/*.sfproj"
  buildPlatform: x64
  buildConfiguration: Release
  serviceConnectionName: serviceFabricCluster
  artifactName: drop
  System.Debug: true

pool:
  #name: selfhosted
  #name: Azure Pipelines
  vmImage: windows-latest

steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: $(solution)

  - task: VSBuild@1
    inputs:
      solution: $(sfproj)
      msbuildArgs: /t:Restore /t:Build /t:Package /p:OutputPath=$(Build.ArtifactStagingDirectory)
      platform: $(buildPlatform)
      configuration: $(buildConfiguration)

  - task: CopyFiles@2
    displayName: Copy '$(solutionName)' Application Parameters
    inputs:
      SourceFolder: $(build.sourcesdirectory)/$(solutionName)/ApplicationParameters
      Contents: "**"
      TargetFolder: $(Build.ArtifactStagingDirectory)/$(solutionName)/ApplicationParameters

  - task: CopyFiles@2
    displayName: Copy '$(solutionName)' Publish Profiles
    inputs:
      SourceFolder: $(build.sourcesdirectory)/$(solutionName)/PublishProfiles
      Contents: "**"
      TargetFolder: $(Build.ArtifactStagingDirectory)/$(solutionName)/PublishProfiles

  - task: CopyFiles@2
    displayName: Copy '$(solutionName)' packages
    inputs:
      SourceFolder: $(build.sourcesdirectory)/$(solutionName)/pkg/$(buildConfiguration)
      Contents: "**"
      TargetFolder: $(Build.ArtifactStagingDirectory)/$(solutionName)/pkg/$(buildConfiguration)

  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: $(artifactName)
      publishLocation: container
